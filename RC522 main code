// by Aayan tech
#include <SPI.h>
#include <MFRC522.h>
#include <LiquidCrystal_I2C.h>
#include <Servo.h>

#define RST_PIN 9
#define SS_PIN 10

MFRC522 mfrc522(SS_PIN, RST_PIN); // Create an MFRC522 instance

LiquidCrystal_I2C lcd(0x27, 16, 2); // Address 0x27, 16 columns, 2 rows
Servo servo;

// Define the UIDs of the allowed RFID tags
const String allowedUID1 = "YOUR_UID1_HERE";
const String allowedUID2 = "YOUR_UID2_HERE";

void setup() {
  Serial.begin(9600); // Initialize serial communication
  SPI.begin(); // Initialize SPI bus
  mfrc522.PCD_Init(); // Initialize MFRC522
  lcd.begin(16, 2); // Initialize the LCD
  lcd.backlight(); // Turn on the backlight
  servo.attach(7); // Attach the servo to pin 7
  servo.write(0); // Initialize the servo position to 0 degrees
  lcd.print("Place an RFID tag");
  lcd.setCursor(0, 1);
  lcd.print("near the reader");
}

void loop() {
  // Look for new RFID cards
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    // Get the UID of the card
    String uid = "";
    for (byte i = 0; i < mfrc522.uid.size; i++) {
      uid.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? "0" : ""));
      uid.concat(String(mfrc522.uid.uidByte[i], HEX));
    }
    Serial.print("UID: ");
    Serial.println(uid);
    mfrc522.PICC_HaltA(); // Halt PICC
    mfrc522.PCD_StopCrypto1(); // Stop encryption on PCD

    // Check if the scanned UID matches either of the allowed UIDs
    if (uid == allowedUID1 || uid == allowedUID2) {
      lcd.clear();
      lcd.print("Access granted!");
      lcd.setCursor(0, 1);
      lcd.print("Rotating servo...");
      servo.write(90); // Rotate the servo to 90 degrees
      delay(2000);
      servo.write(0); // Rotate the servo back to 0 degrees
    } else {
      lcd.clear();
      lcd.print("Access denied!");
      delay(2000);
    }

    // Reset the LCD display
    lcd.clear();
    lcd.print("Place an RFID tag");
    lcd.setCursor(0, 1);
    lcd.print("near the reader");
  }
}
